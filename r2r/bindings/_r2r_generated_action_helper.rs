impl UntypedActionSupport { pub fn new_from (typename : & str) -> Result < Self > { # [allow (non_snake_case)] fn new_untyped_service_support_tf2_msgs_action_LookupTransform () -> UntypedActionSupport { UntypedActionSupport :: new :: < tf2_msgs :: action :: LookupTransform :: Action > () } static MAP : phf :: Map < & 'static str , fn () -> UntypedActionSupport > = phf :: phf_map ! { "tf2_msgs/action/LookupTransform" => new_untyped_service_support_tf2_msgs_action_LookupTransform } ; let func = MAP . get (typename) . ok_or_else (|| Error :: InvalidMessageType { msgtype : typename . into () }) ? ; Ok (func ()) } }