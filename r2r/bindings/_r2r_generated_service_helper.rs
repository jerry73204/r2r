impl UntypedServiceSupport { pub fn new_from (typename : & str) -> Result < Self > { # [allow (non_snake_case)] fn new_untyped_service_support_action_msgs_srv_CancelGoal () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < action_msgs :: srv :: CancelGoal :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_diagnostic_msgs_srv_AddDiagnostics () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < diagnostic_msgs :: srv :: AddDiagnostics :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_diagnostic_msgs_srv_SelfTest () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < diagnostic_msgs :: srv :: SelfTest :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_ChangeState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: ChangeState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_GetAvailableStates () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: GetAvailableStates :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_GetAvailableTransitions () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: GetAvailableTransitions :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_lifecycle_msgs_srv_GetState () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < lifecycle_msgs :: srv :: GetState :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_GetMapROI () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: GetMapROI :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_GetPointMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: GetPointMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_GetPointMapROI () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: GetPointMapROI :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_ProjectedMapsInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: ProjectedMapsInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_SaveMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: SaveMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_map_msgs_srv_SetMapProjections () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < map_msgs :: srv :: SetMapProjections :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_GetMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: GetMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_GetPlan () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: GetPlan :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_LoadMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: LoadMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_nav_msgs_srv_SetMap () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < nav_msgs :: srv :: SetMap :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_DescribeParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: DescribeParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_GetParameterTypes () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: GetParameterTypes :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_GetParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: GetParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_ListParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: ListParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_SetParameters () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: SetParameters :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_rcl_interfaces_srv_SetParametersAtomically () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < rcl_interfaces :: srv :: SetParametersAtomically :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_sensor_msgs_srv_SetCameraInfo () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < sensor_msgs :: srv :: SetCameraInfo :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_tf2_msgs_srv_FrameGraph () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < tf2_msgs :: srv :: FrameGraph :: Service > () } # [allow (non_snake_case)] fn new_untyped_service_support_visualization_msgs_srv_GetInteractiveMarkers () -> UntypedServiceSupport { UntypedServiceSupport :: new :: < visualization_msgs :: srv :: GetInteractiveMarkers :: Service > () } static MAP : phf :: Map < & 'static str , fn () -> UntypedServiceSupport > = phf :: phf_map ! { "action_msgs/srv/CancelGoal" => new_untyped_service_support_action_msgs_srv_CancelGoal , "diagnostic_msgs/srv/AddDiagnostics" => new_untyped_service_support_diagnostic_msgs_srv_AddDiagnostics , "diagnostic_msgs/srv/SelfTest" => new_untyped_service_support_diagnostic_msgs_srv_SelfTest , "lifecycle_msgs/srv/ChangeState" => new_untyped_service_support_lifecycle_msgs_srv_ChangeState , "lifecycle_msgs/srv/GetAvailableStates" => new_untyped_service_support_lifecycle_msgs_srv_GetAvailableStates , "lifecycle_msgs/srv/GetAvailableTransitions" => new_untyped_service_support_lifecycle_msgs_srv_GetAvailableTransitions , "lifecycle_msgs/srv/GetState" => new_untyped_service_support_lifecycle_msgs_srv_GetState , "map_msgs/srv/GetMapROI" => new_untyped_service_support_map_msgs_srv_GetMapROI , "map_msgs/srv/GetPointMap" => new_untyped_service_support_map_msgs_srv_GetPointMap , "map_msgs/srv/GetPointMapROI" => new_untyped_service_support_map_msgs_srv_GetPointMapROI , "map_msgs/srv/ProjectedMapsInfo" => new_untyped_service_support_map_msgs_srv_ProjectedMapsInfo , "map_msgs/srv/SaveMap" => new_untyped_service_support_map_msgs_srv_SaveMap , "map_msgs/srv/SetMapProjections" => new_untyped_service_support_map_msgs_srv_SetMapProjections , "nav_msgs/srv/GetMap" => new_untyped_service_support_nav_msgs_srv_GetMap , "nav_msgs/srv/GetPlan" => new_untyped_service_support_nav_msgs_srv_GetPlan , "nav_msgs/srv/LoadMap" => new_untyped_service_support_nav_msgs_srv_LoadMap , "nav_msgs/srv/SetMap" => new_untyped_service_support_nav_msgs_srv_SetMap , "rcl_interfaces/srv/DescribeParameters" => new_untyped_service_support_rcl_interfaces_srv_DescribeParameters , "rcl_interfaces/srv/GetParameterTypes" => new_untyped_service_support_rcl_interfaces_srv_GetParameterTypes , "rcl_interfaces/srv/GetParameters" => new_untyped_service_support_rcl_interfaces_srv_GetParameters , "rcl_interfaces/srv/ListParameters" => new_untyped_service_support_rcl_interfaces_srv_ListParameters , "rcl_interfaces/srv/SetParameters" => new_untyped_service_support_rcl_interfaces_srv_SetParameters , "rcl_interfaces/srv/SetParametersAtomically" => new_untyped_service_support_rcl_interfaces_srv_SetParametersAtomically , "sensor_msgs/srv/SetCameraInfo" => new_untyped_service_support_sensor_msgs_srv_SetCameraInfo , "tf2_msgs/srv/FrameGraph" => new_untyped_service_support_tf2_msgs_srv_FrameGraph , "visualization_msgs/srv/GetInteractiveMarkers" => new_untyped_service_support_visualization_msgs_srv_GetInteractiveMarkers } ; let func = MAP . get (typename) . ok_or_else (|| Error :: InvalidMessageType { msgtype : typename . into () }) ? ; Ok (func ()) } }